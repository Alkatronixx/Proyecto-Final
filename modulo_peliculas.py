# -*- coding: utf-8 -*-
"""Copia de proyecto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IslkMuSSUizg2Kq49FZFDSNTid42znO6
"""

import numpy as np

def crear_pelicula(nombre: str, genero: str, duracion: int, anio: int, clasificacion: str, hora: int, dia: str) -> dict:
    pelicula = {
        'nombre': nombre,
        'genero': genero,
        'duracion': duracion,
        'anio': anio,
        'clasificacion': clasificacion,
        'hora': hora,
        'dia': dia
    }
    return pelicula

def encontrar_pelicula(nombre_pelicula: str, p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> dict:
    peliculas = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]
    for pelicula in peliculas:
        if pelicula['nombre'] == nombre_pelicula:
            return pelicula

def encontrar_pelicula_mas_larga(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> dict:
    l = [p1['duracion'], p2['duracion'], p3['duracion'], p4['duracion'], p5['duracion'],
         p6['duracion'], p7['duracion'], p8['duracion'], p9['duracion'], p10['duracion']]
    peliculas = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]
    for pelicula in peliculas:
        if pelicula['duracion'] == max(l):
            return pelicula


def duracion_promedio_peliculas(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> str:
    peliculas = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]
    l = [p1['duracion'], p2['duracion'], p3['duracion'], p4['duracion'], p5['duracion'],
         p6['duracion'], p7['duracion'], p8['duracion'], p9['duracion'], p10['duracion']]
    prom = np.mean(l)
    promH = int(prom/60)
    promM = int(prom % 60)
    if promM < 10:
        promM = ("0"+str(promM))
    return str(promH) + ":" + str(promM)


def encontrar_estrenos(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict, anio: int) -> str:
    peliculas = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]
    nombres = []
    for pelicula in peliculas:
        if pelicula['anio'] >= anio:
            nombres.append(pelicula['nombre'])
    if len(nombres) == 0:
        return "Ninguna"
    else:
        return ', '.join(nombres)


def cuantas_peliculas_18_mas(p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> int:
    peliculas = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]
    cont = 0
    for pelicula in peliculas:
        if pelicula['clasificacion'] == '18+':
            cont += 1
    return cont


def reagendar_pelicula(peli: dict, nueva_hora: int, nuevo_dia: str,
                       control_horario: bool, p1: dict, p2: dict, p3: dict, p4: dict, p5: dict, p6: dict, p7: dict, p8: dict, p9: dict, p10: dict) -> bool:
    peliculas = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10]
    horas = []
    horas_fin = []
    dias = []

    for pelicula in peliculas:
        horas.append(pelicula['hora'])
        dias.append(pelicula['dia'])
        if pelicula['hora'] >= 1300:
            pelicula['hora'] -= 1200
            minpel = (int(pelicula['hora']/100)*60) + pelicula['hora'] % 100
            minpel += pelicula['duracion']
            horafin = (int(minpel/60)*100)+1200 + minpel % 60
        else:
            minpel = (int(pelicula['hora']/100)*60) + pelicula['hora'] % 100
            minpel += pelicula['duracion']
            horafin = (int(minpel/60)*100) + minpel % 60
        if horafin > 2400:
            horafin -= 2400
        if horafin < 10:
            horafin = ("000"+str(horafin))
        elif horafin < 60:
            horafin = ("00"+str(horafin))
        horas_fin.append(horafin)

    if control_horario:
        i = 0
        for hora in horas:
            if nueva_hora >= hora and nueva_hora <= (horas_fin[i]):
                return False
            i += 1

        if (peli['genero'] == "Documental" and nueva_hora >= 2200):
            return False
        elif (peli['genero'] == "Drama" and nuevo_dia == "Viernes"):
            return False
        elif (nuevo_dia not in ("Sabado", "Domingo")) and nueva_hora <= 600:
            return False
        elif (nuevo_dia not in ("Sabado", "Domingo")) and nueva_hora >= 2300:
            return False
        elif (nueva_hora in horas) and (nuevo_dia in dias):
            return False
        else:
            return True
    else:
        return False


def decidir_invitar(peli: dict, edad_invitado: int, autorizacion_padres: bool) -> bool:
    if edad_invitado >= 18:
        return True
    else:
        if autorizacion_padres == True:
            return True
        else:
            if "Documental" in peli['clasificacion']:
                return True
            if ("Terror" in peli['genero']) and (edad_invitado < 15):
                return False
            if ("Familiar" not in peli['genero']) and (edad_invitado <= 10):
                return False

            if peli['clasificacion'] == 'Todos':
                return True
            elif peli['clasificacion'] == '7+':
                if edad_invitado >= 7:
                    return True
                else:
                    return False
            elif peli['clasificacion'] == '13+':
                if edad_invitado >= 13:
                    return True
                else:
                    return False
            elif peli['clasificacion'] == '16+':
                if edad_invitado >= 16:
                    return True
                else:
                    return False
            elif peli['clasificacion'] == '18+':
                if edad_invitado >= 18:
                    return True
                else:
                    return False